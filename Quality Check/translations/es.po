# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-06 14:56-0300\n"
"PO-Revision-Date: 2020-12-09 18:30-0300\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.3\n"
"Last-Translator: \n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: es\n"

#: action.py:109
msgid "Fix"
msgstr "Arreglar"

#: action.py:115
msgid "Fix -> "
msgstr "Arreglar -> "

#: action.py:121
msgid "Repeat last check"
msgstr "Repita la última comprobación"

#: action.py:128
msgid "Search scope"
msgstr "Alcance de la búsqueda"

#: action.py:133
msgid "Library"
msgstr "Biblioteca"

#: action.py:134
msgid ""
"Run check against entire library, unless a search restriction is applied"
msgstr ""
"Ejecute la verificación en toda la biblioteca, a menos que se aplique una "
"restricción de búsqueda"

#: action.py:135
msgid "Search Scope -> Library"
msgstr "Alcance de búsqueda -> Biblioteca"

#: action.py:138
msgid "Selected book(s)"
msgstr "Libro(s) seleccionado(s)"

#: action.py:139
msgid "Run check against selected book(s) only"
msgstr "Ejecute el cheque solo con los libros seleccionados"

#: action.py:140
msgid "Search Scope -> Selection"
msgstr "Alcance de búsqueda -> Selección"

#: action.py:145
msgid "Exclude from check..."
msgstr "Excluir del chequeo..."

#: action.py:146
msgid "Exclude selected book(s) from a particular Quality Check"
msgstr ""
"Excluir los libros seleccionados de un control de calidad en particular"

#: action.py:149
msgid "View exclusions..."
msgstr "Ver exclusiones..."

#: action.py:150
msgid "View exclusions you have added for each Quality Check"
msgstr "Ver las exclusiones que ha agregado para cada control de calidad"

#: action.py:155
msgid "&Customize plugin"
msgstr "&Personalizar complemento"

#: action.py:157
msgid "&Help"
msgstr "&Ayuda"

#: check_base.py:61
msgid " (cancelled)"
msgstr " (cancelado)"

#: check_base.py:67
#, python-format
msgid "%d matches found%s, see log for details"
msgstr ""
"%d coincidencias encontradas%s, consulte el registro para obtener más "
"detalles"

#: check_base.py:71
#, python-format
msgid "Checked %d books, found %d matches%s"
msgstr "Comprobó %d libros, se encontraron%d coincidencias con%s"

#: check_base.py:74
msgid "No Matches"
msgstr "No hay coincidencias"

#: check_covers.py:31 check_epub.py:181 check_fix.py:45 check_metadata.py:65
#: check_missing.py:42 check_mobi.py:38
msgid "Quality Check failed"
msgstr "Quality Check a fallado"

#: check_covers.py:32 check_epub.py:182 check_fix.py:46 check_metadata.py:66
#: check_missing.py:43 check_mobi.py:39
#, python-format
msgid "Unknown menu key for %s of '%s'"
msgstr "Tecla de menú desconocida para %s de '%s'"

#: check_covers.py:75
msgid "Failed to identify cover:"
msgstr "No se pudo identificar la carátula:"

#: check_covers.py:108
msgid "books for covers"
msgstr "libros para carátulas"

#: check_covers.py:110
#, python-format
msgid "Checked %d books, found %d cover matches%s"
msgstr "Comprobó %d libros, se encontraron%d coincidencias con%s"

#: check_covers.py:113
#, python-format
msgid "No Matches%s"
msgstr "Sin coincidencias%s"

#: check_covers.py:113
msgid "No matches found"
msgstr "No se encontraron coincidencias"

#: check_covers.py:117
#, python-format
msgid "%d matches found, see log for errors%s"
msgstr "%d coincidencias encontradas, ver el registro de errores%s"

#: check_epub.py:114
msgid "iTunes files"
msgstr "provenientes de ficheros iTunes"

#: check_epub.py:116
msgid "calibre bookmarks"
msgstr "marcadores de calibre"

#: check_epub.py:118
msgid "OS artifacts"
msgstr "Artefactos OS"

#: check_epub.py:271
#, python-format
msgid "Matches in book: <b>%s</b>"
msgstr "Coincidencias en el libro: <b>%s</b>"

#: check_epub.py:273
#, python-format
msgid "First match in book: <b>%s</b>"
msgstr "Primera coincidencia en el libro: <b>%s </b>"

#: check_epub.py:280 check_epub.py:312 check_epub.py:352
msgid "Invalid epub:"
msgstr "Epub no válido:"

#: check_epub.py:283 check_epub.py:315 check_epub.py:355 check_epub.py:555
msgid "ERROR parsing book: "
msgstr "ERROR de análisis de libro: "

#: check_epub.py:288
msgid "No searched ePub books have your search text"
msgstr "Ningún libro ePub buscado tiene su texto de búsqueda"

#: check_epub.py:290
msgid "ePub books for search text"
msgstr "libros ePub para buscar texto"

#: check_epub.py:298 check_epub.py:338 check_epub.py:386 check_epub.py:604
#: check_epub.py:674
msgid "ERROR: EPUB format is missing: "
msgstr "ERROR: Falta el formato EPUB: "

#: check_epub.py:320
msgid "No searched ePub books have legacy jackets"
msgstr "Ningún libro ePub buscado tiene carátulas heredadas"

#: check_epub.py:323
msgid "No searched ePub books have jackets"
msgstr "Ningún libro ePub buscado tiene carátula"

#: check_epub.py:326
msgid "All searched ePub books have jackets"
msgstr "Todos los libros ePub buscados tienen carátulas"

#: check_epub.py:329
msgid "ePub books for jackets"
msgstr "libros ePub para carátulas"

#: check_epub.py:360
msgid "No searched ePub books have multiple jackets"
msgstr "Ningún libro ePub buscado tiene varias carátulas"

#: check_epub.py:362
msgid "ePub books for multiple jackets"
msgstr "libros ePub para múltiples versiones"

#: check_epub.py:418
msgid "No searched ePub books have non-zero .xpgt margins"
msgstr "Ningún libro ePub buscado tiene márgenes .xpgt distintos de cero"

#: check_epub.py:420
msgid "ePub books for .xpgt margins"
msgstr "libros ePub para márgenes .xpgt"

#: check_epub.py:450
msgid "Checking css import"
msgstr "Comprobando la importación de CSS"

#: check_epub.py:459
msgid "Checking html import"
msgstr "Comprobando la importación html"

#: check_epub.py:473
msgid "No searched ePub books have inline xpgt links"
msgstr "Ningún libro ePub buscado tiene enlaces xpgt en línea"

#: check_epub.py:475
msgid "ePub books for inline xpgt links"
msgstr "libros ePub para enlaces xpgt en línea"

#: check_epub.py:526
msgid "No searched ePub books have unmanifested files"
msgstr "Ningún libro ePub buscado tiene archivos no manifestados"

#: check_epub.py:528
msgid "ePub books for unmanifested files"
msgstr "libros ePub para archivos no manifestados"

#: check_epub.py:543 check_epub.py:610 check_epub.py:680
msgid "SKIPPING BOOK (DRM Encrypted): "
msgstr "LIBRO DE SALTAR (encriptado DRM): "

#: check_epub.py:556
msgid "\tIssue with CSS name: "
msgstr "\tProblema con el nombre de CSS: "

#: check_epub.py:580
#, python-format
msgid "\tUnused CSS file: %s"
msgstr "\tArchivo CSS sin usar:%s"

#: check_epub.py:593
msgid "No searched ePub books have unused CSS files"
msgstr "Ningún libro ePub buscado tiene archivos CSS sin usar"

#: check_epub.py:595
msgid "ePub books for unused CSS files"
msgstr "libros ePub para archivos CSS no utilizados"

#: check_epub.py:625
msgid "\tIssue with image name: "
msgstr "\tProblema con el nombre de la imagen: "

#: check_epub.py:649
#, python-format
msgid "\tUnused image file: %s"
msgstr "\tArchivo de imagen sin usar:%s"

#: check_epub.py:662
msgid "No searched ePub books have unused image files"
msgstr "Ningún libro ePub buscado tiene archivos de imagen sin usar"

#: check_epub.py:664
msgid "ePub books for unused image files"
msgstr "libros ePub para archivos de imagen no utilizados"

#: check_epub.py:719
msgid "\tBroken image link in:"
msgstr "\tEnlace de imagen roto en:"

#: check_epub.py:719
msgid " of "
msgstr " de "

#: check_epub.py:731
msgid "No searched ePub books have broken image links"
msgstr "Ningún libro ePub buscado tiene enlaces de imágenes rotos"

#: check_epub.py:733
msgid "ePub books for broken image links"
msgstr "libros ePub para enlaces de imágenes rotos"

#: check_epub.py:776
msgid "No searched ePub books have "
msgstr "No se han encontrado libros ePub "

#: check_epub.py:778
msgid "ePub books for "
msgstr "libros ePub para "

#: check_epub.py:810
msgid "No OPF file in:"
msgstr "No archivo OPF en:"

#: check_epub.py:815
msgid "No supported meta tag or non-xml cover in:"
msgstr "No se admite una metaetiqueta o una carátula que no sea xml en:"

#: check_epub.py:820
msgid "DRM Encrypted cover in:"
msgstr "Carátula encriptada DRM en:"

#: check_epub.py:825
#, python-format
msgid "Invalid cover image extension (%s) in:"
msgstr "Extensión de imagen de portada no válida (%s) en:"

#: check_epub.py:838
msgid "No searched ePub books have replaceable covers"
msgstr "Ningún libro ePub buscado tiene carátulas reemplazables"

#: check_epub.py:841
msgid "All searched ePub books have replaceable covers"
msgstr "Todos los libros ePub buscados tienen carátulas reemplazables"

#: check_epub.py:845
msgid "ePub books for replaceable covers"
msgstr "libros ePub para carátulas reemplazables"

#: check_epub.py:881
msgid "No searched ePub books have calibre SVG covers embedded"
msgstr "Ningún libro ePub buscado tiene portadas SVG de calibre incrustadas"

#: check_epub.py:884
msgid "All searched ePub books have calibre SVG covers embedded"
msgstr ""
"Todos los libros ePub buscados tienen carátulas de calibre SVG incrustadas"

#: check_epub.py:888
msgid "ePub books for calibre SVG covers"
msgstr "libros ePub de carátulas SVG de calibre"

#: check_epub.py:925
msgid "No searched ePub books have calibre covers embedded"
msgstr "Ningún libro ePub buscado tiene cubiertas de calibre incrustadas"

#: check_epub.py:928
msgid "All searched ePub books have calibre covers embedded"
msgstr "Todos los libros ePub buscados tienen carátulas de calibre incrustadas"

#: check_epub.py:932
msgid "ePub books for calibre covers"
msgstr "libros ePub para carátulas de calibre"

#: check_epub.py:961
msgid "No searched ePub books have been converted by calibre"
msgstr "Calibre no ha convertido ningún libro ePub buscado"

#: check_epub.py:964
msgid "All searched ePub books have been converted by calibre"
msgstr "Todos los libros ePub buscados han sido convertidos por calibre"

#: check_epub.py:968
msgid "ePub books for calibre conversions"
msgstr "libros ePub para conversiones de calibre"

#: check_epub.py:993
msgid "All searched ePub books have a valid container.xml file"
msgstr "Todos los libros ePub buscados tienen un archivo container.xml válido"

#: check_epub.py:995
msgid "ePub books for missing container.xml"
msgstr "libros ePub para el archivo container.xml faltante"

#: check_epub.py:1011
msgid "\tMissing container.xml file in"
msgstr "\tFalta el archivo container.xml en"

#: check_epub.py:1016
msgid "\tIncorrect container.xml namespace in"
msgstr "\tEspacio de nombres container.xml incorrecto en"

#: check_epub.py:1023
msgid "\tIncorrect .opf manifest namespace in"
msgstr "\tEspacio de nombres de manifiesto .opf incorrecto en"

#: check_epub.py:1033
msgid "All searched ePub books have valid namespaces"
msgstr "Todos los libros ePub buscados tienen espacios de nombres válidos"

#: check_epub.py:1035
msgid "ePub books for namespaces check"
msgstr "comprobación de libros ePub para espacios de nombres"

#: check_epub.py:1072
msgid "All searched ePub books have only dc: elements in manifest"
msgstr ""
"Todos los libros ePub buscados solo tienen elementos dc: en el manifiesto"

#: check_epub.py:1074
msgid "ePub books for non dc: metadata check"
msgstr "libros ePub para no DC: verificación de metadatos"

#: check_epub.py:1096
#, python-format
msgid "Manifest file missing from: <b>%s</b>"
msgstr "Falta el archivo de manifiesto de: <b>%s</b>"

#: check_epub.py:1110
msgid "All searched ePub books have a valid opf manifest"
msgstr "Todos los libros ePub buscados tienen un manifiesto opf válido"

#: check_epub.py:1112
msgid "ePub books for missing files in opf"
msgstr "libros ePub para archivos faltantes en opf"

#: check_epub.py:1137 check_epub.py:1176
msgid "Ignoring DRM protected ePub: "
msgstr "Ignorando el ePub protegido por DRM: "

#: check_epub.py:1150
msgid "All searched ePub books have a flattened NCX TOC"
msgstr "Todos los libros ePub buscados tienen un TOC NCX aplanado"

#: check_epub.py:1152
msgid "ePub books for NCX TOC hierarchy"
msgstr "libros ePub para la jerarquía de TOC de NCX"

#: check_epub.py:1196
msgid "All searched ePub books have a NCX TOC with at least 3 items"
msgstr "Todos los libros ePub buscados tienen un TOC NCX con al menos 3 items"

#: check_epub.py:1198
msgid "ePub books for NCX TOC count"
msgstr "libros ePub para el recuento de TOC de NCX"

#: check_epub.py:1253
msgid "All searched ePub books have a NCX TOC with valid links"
msgstr "Todos los libros ePub buscados tienen un TOC NCX con enlaces válidos"

#: check_epub.py:1255
msgid "ePub books for broken NCX TOC links"
msgstr "libros ePub para enlaces rotos de NCX TOC"

#: check_epub.py:1298
msgid "All searched ePub books have valid guide entries"
msgstr "Todos los libros ePub buscados tienen entradas de guía válidas"

#: check_epub.py:1300
msgid "ePub books for broken guide links"
msgstr "libros ePub para enlaces de guías rotos"

#: check_epub.py:1334
msgid "No searched ePub books have oversize html files"
msgstr "Ningún libro ePub buscado tiene archivos html de gran tamaño"

#: check_epub.py:1336
msgid "ePub books for oversize html files"
msgstr "libros ePub para archivos html de gran tamaño"

#: check_epub.py:1361
msgid "No searched ePub books have DRM"
msgstr "Ningún libro ePub buscado tiene DRM"

#: check_epub.py:1363
msgid "ePub books for DRM"
msgstr "libros ePub para DRM"

#: check_epub.py:1395
msgid "No searched ePub books have Adobe DRM meta tags"
msgstr "Ningún libro ePub buscado tiene metaetiquetas Adobe DRM"

#: check_epub.py:1397
msgid "ePub books for Adobe DRM meta tags"
msgstr "libros ePub para metaetiquetas Adobe DRM"

#: check_epub.py:1429
msgid "No searched ePub books have \\<address\\> smart tags"
msgstr ""
"Ningún libro ePub buscado tiene etiquetas inteligentes \\<dirección \\>"

#: check_epub.py:1431
msgid "ePub books for <address> smart tags"
msgstr "libros ePub para etiquetas inteligentes<address>"

#: check_epub.py:1450
#, python-format
msgid "Font found in: <b>%s</b>"
msgstr "Fuente encontrada en: <b>%s </b>"

#: check_epub.py:1464
msgid "No searched ePub books have embedded fonts"
msgstr "Ningún libro ePub buscado tiene fuentes incrustadas"

#: check_epub.py:1466
msgid "ePub books for embedded fonts"
msgstr "libros ePub para fuentes incrustadas"

#: check_epub.py:1484
#, python-format
msgid "CSS file contains @font-face: <b>%s</b>"
msgstr "El archivo CSS contiene @font-face: <b>%s</b>"

#: check_epub.py:1490
#, python-format
msgid "At least one html file contains @font-face: <b>%s</b>"
msgstr "Al menos un archivo html contiene @font-face: <b>%s</b>"

#: check_epub.py:1504
msgid "No searched ePub books have @font-face declarations"
msgstr "Ningún libro ePub buscado tiene declaraciones @font-face"

#: check_epub.py:1506
msgid "ePub books for @font-face declarations"
msgstr "libros ePub para declaraciones @font-face"

#: check_epub.py:1535
msgid "All searched ePub books have text-align:justify"
msgstr "Todos los libros ePub buscados tienen alineación de texto: justificar"

#: check_epub.py:1537
msgid "ePub books for text-align:justify"
msgstr "libros ePub para alinear texto: justificar"

#: check_epub.py:1563
msgid "\t\t'margin' property found, so does not match calibre preferences"
msgstr ""
"\t\tse encontró la propiedad 'margen', por lo que no coincide con las "
"preferencias de calibre"

#: check_epub.py:1566
msgid "\t\tNegative margin found, so does not match calibre preferences"
msgstr ""
"\t\tse encontró un margen negativo, por lo que no coincide con las "
"preferencias de calibre"

#: check_epub.py:1575
msgid "\t\tMargins is not defined in pts so does not match calibre preferences"
msgstr ""
"\t\tLos márgenes no están definidos en pts, por lo que no coinciden con las "
"preferencias de calibre"

#: check_epub.py:1583 check_epub.py:1586 check_epub.py:1592
msgid "\t\tMargins are defined in pts but don't match calibre preferences"
msgstr ""
"\t\tLos márgenes se definen en puntos pero no coinciden con las preferencias "
"de calibre"

#: check_epub.py:1595
msgid "\t\tMargins match calibre preferences"
msgstr "\t\tLos márgenes coinciden con las preferencias de calibre"

#: check_epub.py:1621
msgid "\tAnalyzing margins in "
msgstr "\tAnalizando márgenes en "

#: check_epub.py:1651
msgid "All searched ePub books match the calibre page setup preferences"
msgstr ""
"Todos los libros ePub buscados coinciden con las preferencias de "
"configuración de la página de calibre"

#: check_epub.py:1653
msgid "ePub books for body or @page css margins"
msgstr "libros ePub para márgenes css de cuerpo o @page"

#: check_epub.py:1691
msgid "All searched ePub books have book level margins defined"
msgstr ""
"Todos los libros ePub buscados tienen márgenes de nivel de libro definidos"

#: check_epub.py:1693
msgid "ePub books lacking body or @page css margins"
msgstr "libros ePub que carecen de cuerpo o márgenes css de @page"

#: check_epub.py:1729
msgid "No searched ePub books inline @page margins"
msgstr "No se han buscado libros ePub en línea @márgenes de página"

#: check_epub.py:1731
msgid "ePub books using inline @page or body css margins"
msgstr "libros ePub con @page en línea o márgenes css de cuerpo"

#: check_epub.py:1752
#, python-format
msgid "\tContains .js file: %s"
msgstr "\tContiene archivo .js:%s"

#: check_epub.py:1758
#, python-format
msgid "\tContains inline javascript: %s"
msgstr "\tContiene javascript en línea:%s"

#: check_epub.py:1760
#, python-format
msgid "ePub with Javascript: %s"
msgstr "ePub con Javascript:%s"

#: check_epub.py:1775
msgid "No searched ePub books have javascript"
msgstr "Ningún libro ePub buscado tiene javascript"

#: check_epub.py:1777
msgid "ePub books for javascript"
msgstr "libros ePub para javascript"

#: check_epub.py:1801
#, python-format
msgid "Unsmartened punctuation in: <b>%s</b>"
msgstr "Puntuación no abreviada en: <b>%s</b>"

#: check_epub.py:1815
msgid "No searched ePub books need punctuation smartened"
msgstr "Ningún libro ePub buscado necesita puntuación más inteligente"

#: check_epub.py:1817
msgid "ePub books for smarten punctuation"
msgstr "libros ePub para mejorar la puntuación"

#: check_epub.py:1835
#, python-format
msgid "Could not find OPF in:%s"
msgstr "No se pudo encontrar OPF en:%s"

#: check_epub.py:1838
#, python-format
msgid "OPF file in container.xml not found in:%s"
msgstr "El archivo OPF en container.xml no se encuentra en:%s"

#: common_utils.py:254
msgid "Restart required"
msgstr "Reinicio requerido"

#: common_utils.py:255
msgid ""
"Title image not found - you must restart Calibre before using this plugin!"
msgstr ""
"No se encontró la imagen del título - debe reiniciar Calibre antes de usar "
"este complemento!"

#: common_utils.py:535
msgid "Undefined"
msgstr "Indefinido"

#: common_utils.py:621
msgid "Restart calibre now"
msgstr "Reiniciar Calibre ahora"

#: config.py:71
msgid "Check covers..."
msgstr "Verificar las carátulas..."

#: config.py:71
msgid "Find books with book covers matching your criteria"
msgstr ""
"Encuentra libros con carátulas de libros que coincidan con sus criterios"

#: config.py:73
msgid "Check having any jacket"
msgstr "Verificar que tiene alguna carátula"

#: config.py:73 config.py:74 config.py:75 config.py:76 config.py:77
#: config.py:78 config.py:79 config.py:80 config.py:81 config.py:82
#: config.py:83 config.py:84 config.py:85 config.py:86 config.py:87
#: config.py:88 config.py:89 config.py:90 config.py:91 config.py:92
#: config.py:93 config.py:94 config.py:95 config.py:96 config.py:97
#: config.py:98 config.py:99 config.py:100
msgid "Check ePub Structure"
msgstr "Verificar la estructura de ePub"

#: config.py:73
msgid "Check for ePub formats which have any calibre jacket"
msgstr "Verificar los formatos ePub que tengan alguna carátula de calibre"

#: config.py:74
msgid "Check having legacy jacket"
msgstr "Verificar que tiene carátula heredada"

#: config.py:74
msgid ""
"Check for ePub formats which have a calibre jacket from versions prior to "
"0.6.51"
msgstr ""
"Verificar los formatos ePub que tienen una carátula de calibre de versiones "
"anteriores a la 0.6.51"

#: config.py:75
msgid "Check having multiple jackets"
msgstr "Verificar si tiene varias carátulas"

#: config.py:75
msgid "Check for ePub formats which have multiple jackets"
msgstr "Verificar los formatos ePub que tienen múltiples carátulas"

#: config.py:76
msgid "Check missing jacket"
msgstr "Verificar si le falta la carátula"

#: config.py:76
msgid "Check for ePub formats which do not have a jacket"
msgstr "Verificar los formatos ePub que no tienen una carátula"

#: config.py:77
msgid "Check missing container.xml"
msgstr "Verificar si le falta contenedor.xml"

#: config.py:77
msgid ""
"Check for ePub formats with a missing container.xml indicating an invalid "
"ePub"
msgstr ""
"Verificar los formatos ePub con un contenedor.xml faltante que indique un "
"ePub no válido"

#: config.py:78
msgid "Check invalid namespaces"
msgstr "Verificar espacios de nombres no válidos"

#: config.py:78
msgid ""
"Check for ePub formats with invalid namespaces in the container xml or opf "
"manifest"
msgstr ""
"Verificar los formatos ePub con espacios de nombres no válidos en el "
"contenedor xml o en el opf"

#: config.py:79
msgid "Check non-dc: metadata"
msgstr "Verificar metadatos"

#: config.py:79
msgid ""
"Check for ePub formats with metadata elements in the opf manifest that are "
"not in the dc: namespace"
msgstr ""
"Verificar los formatos ePub con elementos de metadatos en el manifiesto de "
"opf que no están en el espacio de nombres dc"

#: config.py:80
msgid "Check manifest files missing"
msgstr "Verificar los archivos de manifiesto que faltan"

#: config.py:80
msgid ""
"Check for ePub formats with files missing that are listed in their opf "
"manifest"
msgstr ""
"Verificar los formatos ePub con archivos faltantes que se enumeran en su opf"

#: config.py:81
msgid "Check unmanifested files"
msgstr "Verificar archivos no manifestados"

#: config.py:81
msgid ""
"Check for ePub formats with files that are not listed in their opf manifest "
"excluding iTunes/bookmarks"
msgstr ""
"Verificar los formatos ePub con archivos que no están listados en su "
"manifiesto opf excluyendo iTunes/marcadores"

#: config.py:82
msgid "Check unused CSS files"
msgstr "Verificar los archivos CSS no utilizados"

#: config.py:82
msgid ""
"Check for ePub formats with CSS files that are not referenced from any html "
"pages"
msgstr ""
"Verificar los formatos ePub con archivos CSS a los que no se hace referencia "
"en ninguna página html"

#: config.py:83
msgid "Check unused image files"
msgstr "Verificar los archivos de imagen no utilizados"

#: config.py:83
msgid ""
"Check for ePub formats with image files that are not referenced from the "
"xhtml pages"
msgstr ""
"Verificar los formatos ePub con archivos de imagen a los que no se hace "
"referencia en las páginas xhtml"

#: config.py:84
msgid "Check broken image links"
msgstr "Verificar los enlaces de imágenes rotos"

#: config.py:84
msgid ""
"Check for ePub formats with html pages that contain broken links to images"
msgstr ""
"Busque formatos ePub con páginas html que contengan enlaces rotos a imágenes"

#: config.py:85
msgid "Check iTunes files"
msgstr "Verificar archivos de iTunes"

#: config.py:85
msgid ""
"Check for ePub formats with an iTunesMetadata.plist or iTunesArtwork file"
msgstr ""
"Verificar los formatos ePub con un archivo iTunesMetadata.plist o "
"iTunesArtwork"

#: config.py:86
msgid "Check calibre bookmark files"
msgstr "Verificar archivos de marcadores de calibre"

#: config.py:86
msgid "Check for ePub formats with a calibre bookmarks file"
msgstr "Verificar los formatos ePub con un archivo de marcadores de calibre"

#: config.py:87
msgid "Check OS artifacts"
msgstr "Verificar los artefactos OS"

#: config.py:87
msgid "Check for ePub formats with OS artifacts of .DS_Store or Thumbs.db"
msgstr ""
"Verificar los formatos ePub con artefactos de OS de .DS_Store o Thumbs.db"

#: config.py:88
msgid "Check NCX TOC hierarchical"
msgstr "Verificar NCX TOC jerárquico"

#: config.py:88
msgid ""
"Check for ePub formats with a NCX file TOC which is not flat (i.e. "
"hierarchical)"
msgstr ""
"Verificar los formatos ePub con un TOC de archivo NCX que no sea plano (es "
"decir, jerárquico)"

#: config.py:89
msgid "Check NCX TOC with < 3 entries"
msgstr "Verificar NCX TOC con <3 entradas"

#: config.py:89
msgid "Check for ePub formats with a NCX file TOC with less than 3 entries"
msgstr ""
"Verificar los formatos ePub con un TOC de archivo NCX con menos de 3 entradas"

#: config.py:90
msgid "Check NCX TOC with broken links"
msgstr "Verificar NCX TOC con enlaces rotos"

#: config.py:90
msgid ""
"Check for ePub formats with a NCX file TOC that contains broken html links"
msgstr ""
"Verificar los formatos ePub con un TOC de archivo NCX que contenga enlaces "
"html rotos"

#: config.py:91
msgid "Check <guide> broken links"
msgstr "Verificar los enlaces rotos de <guia>"

#: config.py:91
msgid ""
"Check for ePub formats with broken links in the <guide> section of the "
"manifest"
msgstr ""
"Verificar los formatos ePub con enlaces rotos en la sección<guia>del "
"manifiesto"

#: config.py:92
msgid "Check oversize html files"
msgstr "Verificar archivos html de gran tamaño"

#: config.py:92
msgid ""
"Check for ePub formats with an individual html file size that requires "
"splitting on some devices"
msgstr ""
"Verificar los formatos ePub con un tamaño de archivo html individual que "
"requiera dividir en algunos dispositivos"

#: config.py:93
msgid "Check DRM"
msgstr "Verificar DRM"

#: config.py:93
msgid "Check for ePub formats with DRM encryption xml files"
msgstr "Verificar los formatos ePub con archivos xml de cifrado DRM"

#: config.py:94
msgid "Check Adobe DRM meta tag"
msgstr "Verificar la metaetiqueta de Adobe DRM"

#: config.py:94
msgid ""
"Check for ePub formats that contain html pages with an Adobe DRM meta "
"identifier tag"
msgstr ""
"Verificar los formatos ePub que contienen páginas html con una metaetiqueta "
"de identificación de Adobe DRM"

#: config.py:95
msgid "Check replaceable cover"
msgstr "Revisar las carátulas reemplazables"

#: config.py:95
msgid ""
"Check for ePub formats with a cover that can be replaced when exporting or "
"updating metadata with Modify ePub"
msgstr ""
"Verificar los formatos ePub con una carátula que se pueda reemplazar al "
"exportar o actualizar metadatos con Modificar ePub"

#: config.py:96
msgid "Check non-replaceable cover"
msgstr "Revisar las carátulas no reemplazables"

#: config.py:96
msgid ""
"Check for ePub formats with no cover or a cover that cannot be replaced "
"without a calibre conversion"
msgstr ""
"Verificar si hay formatos ePub sin carátula o con una carátula que no se "
"pueda reemplazar sin una conversión de calibre"

#: config.py:97
msgid "Check calibre SVG cover"
msgstr "Verificar carátula SVG de calibre"

#: config.py:97
msgid ""
"Check for ePub formats with a cover that has been inserted by a calibre "
"conversion or Modify ePub and that is SVG"
msgstr ""
"Verificar los formatos ePub con una carátula que haya sido insertada por una "
"conversión de calibre o Modificar ePub y que sea SVG"

#: config.py:98
msgid "Check no calibre SVG cover"
msgstr "No compruebe carátula SVG de calibre"

#: config.py:98
msgid ""
"Check for ePub formats that have no calibre cover inserted by a calibre "
"conversion or Modify ePub that is SVG"
msgstr ""
"Verificar los formatos ePub que no tienen una carátula de calibre insertada "
"por una conversión de calibre o Modifique ePub que sea SVG"

#: config.py:99
msgid "Check calibre conversion"
msgstr "Verificar la conversión de calibre"

#: config.py:99
msgid "Check for ePub formats that have been converted by calibre"
msgstr "Verificar los formatos ePub que haya convertido calibre"

#: config.py:100
msgid "Check not calibre conversion"
msgstr "No compruebe la conversión de calibre"

#: config.py:100
msgid "Check for ePub formats that have not been converted by calibre"
msgstr "Verificar los formatos ePub que no hayan sido convertidos por calibre"

#: config.py:102
msgid "Check <address> smart-tags"
msgstr "Marque las etiquetas inteligentes de <dirección>"

#: config.py:102 config.py:103 config.py:104 config.py:105 config.py:106
#: config.py:107 config.py:108 config.py:109 config.py:110 config.py:111
#: config.py:112
msgid "Check ePub Style"
msgstr "Verificar estilo ePub"

#: config.py:102
msgid ""
"Check for ePub formats that have <address> elements from a poor conversion "
"with Word smart tags"
msgstr ""
"Busque formatos ePub que tengan elementos <direccion>de una conversión "
"deficiente con etiquetas inteligentes de Word"

#: config.py:103
msgid "Check embedded fonts"
msgstr "Verificar las fuentes incrustadas"

#: config.py:103
msgid "Check for ePub formats with embedded fonts"
msgstr "VErificar los formatos ePub con fuentes incrustadas"

#: config.py:104
msgid "Check @font-face"
msgstr "Verificar @font-face"

#: config.py:104
msgid ""
"Check for ePub formats with CSS or html files that contain @font-face "
"declarations"
msgstr ""
"Verificar los formatos ePub con archivos CSS o html que contienen "
"declaraciones @font-face"

#: config.py:105
msgid "Check Adobe .xpgt margins"
msgstr "Verificar los márgenes de Adobe .xpgt"

#: config.py:105
msgid "Check for ePub formats with an xpgt file with non-zero margins"
msgstr ""
"Verificar los formatos ePub con un archivo xpgt con márgenes distintos de "
"cero"

#: config.py:106
msgid "Check Adobe inline .xpgt links"
msgstr "Verificar los enlaces .xpgt en línea de Adobe"

#: config.py:106
msgid ""
"Check for ePub formats that contain html pages with links to an xpgt file"
msgstr ""
"Busque formatos ePub que contengan páginas html con enlaces a un archivo xpgt"

#: config.py:107
msgid "Check CSS non-justified"
msgstr "Verificar CSS no justificado"

#: config.py:107
msgid ""
"Check for ePub formats with CSS files that do not contain a text-align: "
"justify style"
msgstr ""
"Verificar los formatos ePub con archivos CSS que no contienen un estilo de "
"alineación de texto: justificado"

#: config.py:108
msgid "Check CSS book margins"
msgstr "Verificar los márgenes CSS  de los libros"

#: config.py:108
msgid ""
"Check for ePub formats with book level CSS margins conflicting with calibre "
"Preferences"
msgstr ""
"Verificar los formatos ePub con márgenes CSS a nivel de libro que entren en "
"conflicto con las preferencias de calibre"

#: config.py:109
msgid "Check CSS no book margins"
msgstr "Verificar CSS sin márgenes de libro"

#: config.py:109
msgid "Check for ePub formats that do not contain CSS book level margins"
msgstr ""
"Verificar los formatos ePub que no contienen márgenes de nivel de libro CSS"

#: config.py:110
msgid "Check inline @page margins"
msgstr "Verificar los márgenes de @page en línea"

#: config.py:110
msgid "Check for ePub formats that contain @page CSS margins in each flow"
msgstr ""
"Verificar los formatos ePub que contienen márgenes CSS @page en cada flujo"

#: config.py:111
msgid "Check javascript <script>"
msgstr "Verificar javascript<script>"

#: config.py:111
msgid "Check for ePub formats that contain inline javascript <script> blocks"
msgstr ""
"Verificar los formatos ePub que contienen bloques <script> de JavaScript en "
"línea"

#: config.py:112
msgid "Check smarten punctuation"
msgstr "Verificar la puntuación inteligente"

#: config.py:112
msgid "Check for ePub formats that contain unsmartened punctuation"
msgstr "Verificar los formatos ePub que contengan puntuación no abreviada"

#: config.py:114
msgid "Check missing EBOK cdetype"
msgstr "Verificar que falta el tipo de código EBOK"

#: config.py:114 config.py:115 config.py:116 config.py:117
msgid "Check Mobi"
msgstr "Verificar Mobi"

#: config.py:114
msgid ""
"Check for MOBI/AZW/AZW3 formats missing the cdetype of EBOK required for a "
"Kindle Fire"
msgstr ""
"Verificar si los formatos MOBI/AZW/AZW3 no tienen el cdetype de EBOK "
"requerido para un Kindle Fire"

#: config.py:115
msgid "Check missing ASIN identifier"
msgstr "Verificar el identificador ASIN faltante"

#: config.py:115
msgid ""
"Check for MOBI/AZW/AZW3 formats missing an ASIN in EXTH 113 required for "
"reading on a Kindle Fire"
msgstr ""
"Verificar los formatos MOBI/AZW/AZW3 que faltan un ASIN en EXTH 113 "
"requerido para leer en un Kindle Fire"

#: config.py:116
msgid "Check Twitter/Facebook disabled"
msgstr ""
"Verificar los formatos MOBI/AZW/AZW3 sin un ASIN en EXTH 113 y EXTH 504 para "
"habilitar las funciones de \"compartir\" en Facebook o Twitter"

#: config.py:116
msgid ""
"Check for MOBI/AZW/AZW3 formats missing an ASIN in both EXTH 113 and EXTH "
"504 to enable \"share\" features on Facebook or Twitter"
msgstr ""
"Verificar los formatos MOBI/AZW/AZW3 sin un ASIN en EXTH 113 y EXTH 504 para "
"habilitar las funciones de \"compartir\" en Facebook o Twitter"

#: config.py:117
msgid "Check clipping limit"
msgstr "Verificar el límite de recorte"

#: config.py:117
msgid ""
"Check for MOBI/AZW/AZW3 formats that have a clipping limit specified by the "
"publisher in EXTH header 401"
msgstr ""
"Verificar los formatos MOBI/AZW/AZW3 que tienen un límite de recorte "
"especificado por el editor en el encabezado EXTH 401"

#: config.py:119
msgid "Check title sort"
msgstr "Verificar clasificación de títulos"

#: config.py:119 config.py:120 config.py:121 config.py:122 config.py:123
#: config.py:124 config.py:125 config.py:126 config.py:127 config.py:128
#: config.py:129 config.py:130 config.py:131 config.py:132 config.py:133
#: config.py:134 config.py:135 config.py:136 config.py:137
msgid "Check metadata"
msgstr "Verificar metadatos"

#: config.py:119
msgid "Find books with an invalid title sort value"
msgstr "Buscar libros con un valor de clasificación de título no válido"

#: config.py:120
msgid "Check author sort"
msgstr "Verificar el tipo de autor"

#: config.py:120
msgid "Find books with an invalid author sort value"
msgstr "Buscar libros con un valor de clasificación de autor no válido"

#: config.py:121
msgid "Check ISBN"
msgstr "Verificar ISBN"

#: config.py:121
msgid "Find books with an invalid ISBN"
msgstr "Buscar libros con un ISBN no válido"

#: config.py:122
msgid "Check pubdate"
msgstr "Verificar fecha de publicación"

#: config.py:122
msgid ""
"Find books with an invalid pubdate where it is set to the timestamp date"
msgstr ""
"Busque libros con una fecha de publicación no válida cuando esté establecida "
"en la fecha de la marca de tiempo"

#: config.py:123
msgid "Check duplicate ISBN"
msgstr "Verificar ISBN duplicados"

#: config.py:123
msgid "Find books that have duplicate ISBN values"
msgstr "Busque libros que tengan valores de ISBN duplicados"

#: config.py:124
msgid "Check duplicate series"
msgstr "Verificar series duplicadas"

#: config.py:124
msgid "Find books that have duplicate series values"
msgstr "Busque libros que tengan valores de serie duplicados"

#: config.py:125
msgid "Check series gaps"
msgstr "Verificar los espacios entre series"

#: config.py:125 config.py:126
msgid "Find books that have gaps in their series index values"
msgstr ""
"Encuentre libros que tengan espacios en blanco en sus valores de índice de "
"serie"

#: config.py:126
msgid "Check series pubdate order"
msgstr "Consultar orden de publicación de la serie"

#: config.py:127
msgid "Check excess tags"
msgstr "Verificar el exceso de etiquetas"

#: config.py:127
msgid "Find books with an excess number of tags"
msgstr "Encuentra libros con un número excesivo de etiquetas"

#: config.py:128
msgid "Check html comments"
msgstr "Verificar comentarios html"

#: config.py:128
msgid "Find books which have comments html with style formatting embedded"
msgstr ""
"Encuentre libros que tengan comentarios html con formato de estilo incrustado"

#: config.py:129
msgid "Check no html comments"
msgstr "No compruebe comentarios html"

#: config.py:129
msgid "Find books which have comments with no html tags at all"
msgstr "Encuentre libros que tengan comentarios sin etiquetas html en absoluto"

#: config.py:130
msgid "Check authors with commas"
msgstr "Verificar los autores con comas"

#: config.py:130
msgid "Find authors with commas in their name"
msgstr "Buscar autores con comas en su nombre"

#: config.py:131
msgid "Check authors missing commas"
msgstr "Verificar los autores que faltan comas"

#: config.py:131
msgid "Find authors with no commas in their name"
msgstr "Buscar autores sin comas en su nombre"

#: config.py:132
msgid "Check authors for case"
msgstr "Verificar los autores para el caso"

#: config.py:132
msgid "Find authors which are all uppercase or all lowercase"
msgstr "Buscar autores que estén todos en mayúsculas o minúsculas"

#: config.py:133
msgid "Check authors non alphabetic"
msgstr "Verificar autores no alfabéticos"

#: config.py:133
msgid ""
"Find authors with non-alphabetic characters such as semi-colons indicating "
"cruft or incorrect separators"
msgstr ""
"Busque autores con caracteres no alfabéticos, como puntos y comas que "
"indiquen basura o separadores incorrectos"

#: config.py:134
msgid "Check authors non ascii"
msgstr "Verificar autores no ascii"

#: config.py:134
msgid "Find authors with non-ascii names (e.g. with diatrics)"
msgstr ""
"Buscar autores con nombres que no sean ASCII (por ejemplo, con diacríticos)"

#: config.py:135
msgid "Check authors initials"
msgstr "Verificar iniciales de los autores"

#: config.py:135
msgid ""
"Find authors with initials that do not meet your preferred configuration"
msgstr ""
"Busque autores con iniciales que no se ajusten a su configuración preferida"

#: config.py:136
msgid "Check titles with series"
msgstr "Consultar títulos con series"

#: config.py:136
msgid "Find titles with possible series info in their name"
msgstr "Encuentra títulos con información de posibles series en su nombre"

#: config.py:137
msgid "Check titles for title case"
msgstr "Verificar los títulos para el caso del título"

#: config.py:137
msgid "Find titles which are candidates to apply the titlecase function to"
msgstr ""
"Encuentre títulos que sean candidatos para aplicar la función de caso de "
"título a"

#: config.py:139
msgid "Check missing title"
msgstr "Verificar el título que falta"

#: config.py:139 config.py:140 config.py:141 config.py:142 config.py:143
#: config.py:144 config.py:145 config.py:146 config.py:147 config.py:148
#: config.py:149
msgid "Check missing"
msgstr "Verificar falta"

#: config.py:139
msgid "Find books missing a title"
msgstr "Encuentra libros a los que les falta un título"

#: config.py:140
msgid "Check missing author"
msgstr "Verificar autor faltante"

#: config.py:140
msgid "Find books missing authors"
msgstr "Encontrar libros de autores desaparecidos"

#: config.py:141
msgid "Check missing ISBN"
msgstr "Verificar el ISBN faltante"

#: config.py:141
msgid "Find books missing an ISBN identifier"
msgstr "Buscar libros a los que les falta un identificador ISBN"

#: config.py:142
msgid "Check missing pubdate"
msgstr "Verificar la fecha de publicación que falta"

#: config.py:142
msgid "Find books missing published date"
msgstr "Buscar libros sin fecha de publicación"

#: config.py:143
msgid "Check missing publisher"
msgstr "Verificar editor faltante"

#: config.py:143
msgid "Find books missing publisher"
msgstr "Encontrar libros que faltan editor"

#: config.py:144
msgid "Check missing tags"
msgstr "Verificar las etiquetas faltantes"

#: config.py:144
msgid "Find books missing tags"
msgstr "Encuentra libros que faltan etiquetas"

#: config.py:145
msgid "Check missing rating"
msgstr "Verificar calificación faltante"

#: config.py:145
msgid "Find books missing rating"
msgstr "Buscar libros sin calificación"

#: config.py:146
msgid "Check missing comments"
msgstr "Verificar los comentarios que faltan"

#: config.py:146
msgid "Find books missing comments"
msgstr "Buscar libros que no tengan comentarios"

#: config.py:147
msgid "Check missing languages"
msgstr "Verificar los idiomas que faltan"

#: config.py:147
msgid "Find books missing languages"
msgstr "Encuentra libros que faltan idiomas"

#: config.py:148
msgid "Check missing cover"
msgstr "Verificar la carátula que falta"

#: config.py:148
msgid "Find books missing a cover"
msgstr "Encuentra libros a los que les falta una carátula"

#: config.py:149
msgid "Check missing formats"
msgstr "Verificar los formatos que faltan"

#: config.py:149
msgid "Find books missing formats"
msgstr "Encuentra libros con formatos faltantes"

#: config.py:151
msgid "Search ePubs..."
msgstr "Buscar ePubs..."

#: config.py:151
msgid "Find ePub books with text matching your own regular expression"
msgstr ""
"Encuentre libros ePub con texto que coincida con su propia expresión regular"

#: config.py:156
msgid "Swap author FN LN <-> LN,FN"
msgstr "Intercambiar autor FN LN <->LN, FN"

#: config.py:156
msgid ""
"For the selected book(s) swap author names between FN LN and LN, FN formats"
msgstr ""
"Para los libros seleccionados, cambie los nombres de los autores entre los "
"formatos FN LN y LN, FN"

#: config.py:157
msgid "Reformat author initials"
msgstr "Reformatear las iniciales del autor"

#: config.py:157
msgid ""
"For the selected book(s) reformat the author initials to your configured "
"preference"
msgstr ""
"Para los libros seleccionados, vuelva a formatear las iniciales del autor "
"según sus preferencias configuradas"

#: config.py:158
msgid "Rename author to ascii"
msgstr "Cambiar el nombre del autor a ascii"

#: config.py:158
msgid ""
"For the selected book(s) rename the title to remove any accents and diatrics "
"characters"
msgstr ""
"Para los libros seleccionados, cambie el nombre del título para eliminar los "
"acentos y los caracteres diacríticos"

#: config.py:159
msgid "Check and repair book sizes"
msgstr "Verificar y reparar tamaños de libros"

#: config.py:159
msgid "Check and update file sizes for your books"
msgstr "Verificar y actualice el tamaño de los archivos de sus libros"

#: config.py:160
msgid "Check and rename book paths"
msgstr "Verificar y cambie el nombre de las rutas de los libros"

#: config.py:160
msgid "Ensure book paths include commas if appropriate"
msgstr "Asegúrese de que las rutas de los libros incluyan comas si corresponde"

#: config.py:161
msgid "Cleanup .opf files/folders"
msgstr "Limpieza de archivos .opf/carpetas"

#: config.py:161
msgid "Delete orphaned opf/jpg files and remove empty folders"
msgstr "Eliminar archivos opf/jpg huérfanos y eliminar carpetas vacías"

#: config.py:162
msgid "Fix ASIN for Kindle Fire"
msgstr "Arreglar ASIN para Kindle Fire"

#: config.py:162
msgid ""
"For MOBI/AZW/AZW3 formats, assign the current amazon identifier (uuid if not "
"present) as an ASIN to EXTH 113 and 504 fields"
msgstr ""
"Para los formatos MOBI/AZW/AZW3, asigne el identificador de Amazon actual "
"(uuid si no está presente) como un ASIN a los campos EXTH 113 y 504"

#: config.py:279
msgid "Check excess tags Options"
msgstr "Verificar el exceso de etiquetas"

#: config.py:284
msgid "Maximum tags:"
msgstr "Etiquetas máximas:"

#: config.py:285
msgid "Books with more than this value will be displayed"
msgstr "Se mostrarán los libros con más de este valor"

#: config.py:293
msgid "Exclude tags:"
msgstr "Excluir etiquetas:"

#: config.py:294
msgid "Exclude these tags from when counting the tags for each book"
msgstr "Excluya estas etiquetas al contar las etiquetas de cada libro"

#: config.py:303
msgid "Other Options"
msgstr "Otras opciones"

#: config.py:308
msgid "Author initials format:"
msgstr "Formato de las iniciales del autor:"

#: config.py:309
msgid ""
"For use with the \"Check Author initials\" option, set your preferred format"
msgstr ""
"Para usar con la opción \"Verificar iniciales del autor\", configure su "
"formato preferido"

#: config.py:317
msgid "Visible Menus"
msgstr "Menús visibles"

#: config.py:325
msgid "Keyboard shortcuts..."
msgstr "Atajos de teclado..."

#: config.py:327
msgid "Edit the keyboard shortcuts associated with this plugin"
msgstr "Edite los atajos de teclado asociados con este complemento"

#: config.py:331
msgid "&View library preferences..."
msgstr "&Ver preferencias de biblioteca.."

#: config.py:333
msgid "View data stored in the library database for this plugin"
msgstr ""
"Ver datos almacenados en la base de datos de la biblioteca para este "
"complemento"

#: dialogs.py:43
msgid "Checking"
msgstr "Comprobando la importación de CSS"

#: dialogs.py:45
msgid "Cancel"
msgstr "Cancelar"

#: dialogs.py:64
#, python-format
msgid "%s %d %s  (%d matches)..."
msgstr "%s %d %s (%d coincidencias)..."

#: dialogs.py:81
msgid "less than"
msgstr "menos que"

#: dialogs.py:81
msgid "greater than"
msgstr "más grande"

#: dialogs.py:83
msgid "equal to"
msgstr "igual a"

#: dialogs.py:83
msgid "not equal to"
msgstr "no igual a"

#: dialogs.py:96
msgid "quality check plugin:cover options dialog"
msgstr "quality check plugin: diálogo de opciones de carátula"

#: dialogs.py:126
msgid "Cover Search Options"
msgstr "Opciones de búsqueda carátulas"

#: dialogs.py:129
msgid "Search library for books where"
msgstr "Buscar libros en la biblioteca donde"

#: dialogs.py:133
msgid "Cover file size is"
msgstr "El tamaño del archivo de carátula es"

#: dialogs.py:143
msgid "Cover dimensions are"
msgstr "Las dimensiones de la carátula son"

#: dialogs.py:151
msgid "width"
msgstr "ancho"

#: dialogs.py:156
msgid "height"
msgstr "altura"

#: dialogs.py:158
msgid "No cover"
msgstr "Sin carátula"

#: dialogs.py:223
msgid "Copy to clipboard"
msgstr "Copiar al portapapeles"

#: dialogs.py:255
msgid "View log"
msgstr "Ver registro"

#: dialogs.py:304
msgid "quality check plugin:exclude add dialog"
msgstr "quality check plugin: excluir agregar diálogo"

#: dialogs.py:313
msgid "Quality Check Add Exclusions"
msgstr "Control de calidad Agregar exclusiones"

#: dialogs.py:316
msgid "Exclude Books"
msgstr "Excluir libros"

#: dialogs.py:320
msgid "Exclude selected books(s) from the following Quality Check:"
msgstr "Excluya los libros seleccionados del siguiente control de calidad:"

#: dialogs.py:424
msgid "quality check plugin:exclude view dialog"
msgstr "complemento de control de calidad: excluir vista de diálogo"

#: dialogs.py:427
msgid "Quality Check View Exclusions"
msgstr "Exclusiones de vista de control de calidad"

#: dialogs.py:431
msgid "View Excluded Books"
msgstr "Ver libros excluidos"

#: dialogs.py:450
msgid "Remove selected books from the exclusions"
msgstr "Eliminar los libros seleccionados de las exclusiones"

#: dialogs.py:509
msgid "quality check plugin:search epub dialog"
msgstr "quality check plugin: cuadro de diálogo de búsqueda de epub"

#: dialogs.py:537
msgid "Search ePubs"
msgstr "Buscar ePubs"

#: dialogs.py:540
msgid "Find expression"
msgstr "Encontrar expresión"

#: dialogs.py:550
msgid "&Ignore case"
msgstr "&Ignorar caso"

#: dialogs.py:552
msgid "&Show all occurrences"
msgstr "Mostrar toda&s las ocurrencias"

#: dialogs.py:553
msgid ""
"If unchecked, the search of each ePub is stopped as soon as the first match "
"is found.\n"
"If checked, all occurrences will be displayed in the log but it will run "
"much slower."
msgstr ""
"Si no se marca, la búsqueda de cada ePub se detiene tan pronto como se "
"encuentra la primera coincidencia.\n"
"Si está marcado, todas las ocurrencias se mostrarán en el registro, pero se "
"ejecutará mucho más lento."

#: dialogs.py:558
msgid "Scope"
msgstr "Alcance"

#: dialogs.py:563
msgid "&HTML content"
msgstr "Contenido &HTML"

#: dialogs.py:564
msgid ""
"Search all html content files, including any html tags.\n"
"If you also ticked the Plain text content option, this option is ignored."
msgstr ""
"Busque todos los archivos de contenido html, incluidas las etiquetas html.\n"
"Si también marcó la opción Contenido de texto sin formato, esta opción se "
"ignora."

#: dialogs.py:566
msgid "&CSS/xpgt stylesheets"
msgstr "Hojas de estilo &CSS/xpgt"

#: dialogs.py:567
msgid "Search all css or Adobe .xpgt stylesheets"
msgstr "Buscar todas las hojas de estilo CSS o Adobe .xpgt"

#: dialogs.py:568
msgid "&Plain text content"
msgstr "&Contenido de texto sin formato"

#: dialogs.py:569
msgid ""
"Search body text of html files with all html tags stripped.\n"
"If you also ticked the HTML content option, that is ignored in favour of "
"this."
msgstr ""
"Busque el texto del cuerpo de los archivos html con todas las etiquetas html "
"eliminadas.\n"
"Si también marcó la opción de contenido HTML, se ignora a favor de esto."

#: dialogs.py:571
msgid "&OPF manifest"
msgstr "&OPF manifiesto"

#: dialogs.py:572
msgid "Search the .opf manifest file"
msgstr "Busque el archivo de manifiesto .opf"

#: dialogs.py:573
msgid "&NCX TOC"
msgstr "&NCX TOC"

#: dialogs.py:574
msgid "Search the NCX table of contents file"
msgstr "Buscar en el archivo de tabla de contenido de NCX"

#: dialogs.py:575
msgid "&Zip filenames"
msgstr "Nombres de archivo &Zip"

#: dialogs.py:576
msgid "Search the filenames inside the ePub (zip) file"
msgstr "Busque los nombres de archivo dentro del archivo ePub (zip)"

#: dialogs.py:593
msgid "No find text"
msgstr "No encontrar texto"

#: dialogs.py:594
msgid "You must specify a regular expression to search for."
msgstr "Debe especificar una expresión regular para buscar."

#: dialogs.py:614
msgid "No search scope"
msgstr "Sin alcance de búsqueda"

#: dialogs.py:615
msgid "You must specify a scope for the ePub search."
msgstr "Debe especificar un alcance para la búsqueda ePub."

#: dialogs.py:649
msgid "Fixing"
msgstr "Arreglando"

#: dialogs.py:662
msgid "Fix completed"
msgstr "Arreglo completado"

#: mobi6.py:88
msgid "This is an Amazon Topaz book. It cannot be processed."
msgstr "Este es un libro de Amazon Topaz. No se puede procesar."

#: mobi6.py:161
msgid "No existing EXTH record. Cannot update ASIN."
msgstr "No hay registro EXTH existente. No se puede actualizar el ASIN."

#: __init__.py:28
msgid "Quality Check"
msgstr "Quality Check"

#: __init__.py:29
msgid "Query your library for poor quality covers or invalid metadata"
msgstr ""
"Consulta en su biblioteca las carátulas de baja calidad o los metadatos no "
"válidos"
